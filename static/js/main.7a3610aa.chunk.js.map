{"version":3,"sources":["components/Section.js","components/Notification.js","components/Statistics/Statistiсs.js","components/Feedback/FeedbackOptions.js","components/Container/Container.js","components/App.js","index.js"],"names":["Section","title","children","className","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","el","type","id","onClick","Container","App","state","handleIncrementVote","evt","target","setState","prevState","textContent","countTotalFeedback","Object","values","reduce","prevValue","nextValue","countPositiveFeedbackPercentage","Math","round","this","percentage","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAU,UAAnB,UACE,oBAAIA,UAAU,cAAd,SAA6BF,IAC5BC,KCEQE,MANf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,oBAAIF,UAAU,sBAAd,SAAqCE,KCuB/BC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,qBAAIR,UAAU,mBAAd,UACE,qBAAIA,UAAU,mBAAd,mBAAwCI,KACxC,qBAAIJ,UAAU,mBAAd,sBAA2CK,KAC3C,qBAAIL,UAAU,mBAAd,kBAAuCM,KACvC,qBAAIN,UAAU,mBAAd,oBAAyCO,KACzC,qBAAIP,UAAU,mBAAd,gCACsBQ,EADtB,aCaOC,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAElC,OACE,qBAAKX,UAAU,aAAf,SACGU,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SACLd,UAAU,YACVe,GAAIF,EAEJG,QAASL,EALX,SAOGE,GAHIA,S,MCVA,SAASI,EAAT,GAAkC,IAAblB,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,I,ICG/BmB,E,4MACJC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,oBAAsB,SAACC,GACrB,IAAQC,EAAWD,EAAXC,OACR,EAAKC,UAAS,SAACC,GAAD,sBAEXF,EAAOG,YAAcD,EAAUF,EAAOG,aAAe,O,EAG1DC,mBAAqB,WAInB,OAHcC,OAAOC,OAAO,EAAKT,OAAOU,QACtC,SAACC,EAAWC,GAAZ,OAA0BD,EAAYC,M,EAK1CC,gCAAkC,WAKhC,OAJ2BC,KAAKC,MAC7B,EAAKf,MAAMf,KAAO,EAAKsB,qBAAwB,M,4CAMpD,WACE,MAA+BS,KAAKhB,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQ4B,KAAKT,qBACbU,EAAaD,KAAKH,kCACxB,OACE,eAACf,EAAD,WACE,cAACpB,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEY,QAASiB,OAAOU,KAAKF,KAAKhB,OAC1BR,gBAAiBwB,KAAKf,wBAI1B,cAACvB,EAAD,CAASC,MAAM,aAAf,SACa,IAAVS,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB4B,a,GAnDhBE,aA4DHpB,IC7DfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7a3610aa.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport \"./styles/statistics.scss\";\n\nexport default function Section({ title, children }) {\n  return (\n    <section className=\"section\">\n      <h1 className=\"title__main\">{title}</h1>\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n// class Section extends Component {\n//   state = {\n//     visible: false,\n//   };\n//   onShow = () => {\n//     this.setState({ visible: true });\n//   };\n//   render() {\n//     return <h1>{this.props.title}</h1>;\n//   }\n// }\n","import PropTypes from \"prop-types\";\nimport \"./styles/statistics.scss\";\n\nfunction Notification({ message }) {\n  return <h3 className=\"title__notification\">{message}</h3>;\n}\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/statistics.scss\";\n\n// ===\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <ul className=\"statistics__list\">\n        <li className=\"statistics__item\">Good: {good}</li>\n        <li className=\"statistics__item\">Neutral: {neutral}</li>\n        <li className=\"statistics__item\">Bad: {bad}</li>\n        <li className=\"statistics__item\">Total: {total}</li>\n        <li className=\"statistics__item\">\n          Positive feedback: {positivePercentage}%\n        </li>\n      </ul>\n    </>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n// ==============\n\n//   render() {\n//     return (\n//       <>\n//         <h2>Statistics</h2>\n//         <ul className={st.statistics__list}>\n//           {Object.entries(this.props).map(([key, value]) => (\n//             <li className={st.statistics__item} id={key} key={key}>\n//               {key}:<span className={st.statistics__vote}>{value}</span>\n//             </li>\n//           ))}\n//         </ul>\n//       </>\n//     );\n//   }\n// }\n","import PropTypes from \"prop-types\";\n// [option]: state[option] + 1,\nimport \"../styles/statistics.scss\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  // console.log(options);\n  return (\n    <div className=\"btn__block\">\n      {options.map((el) => (\n        <button\n          type=\"button\"\n          className=\"btn__item\"\n          id={el}\n          key={el}\n          onClick={onLeaveFeedback}\n        >\n          {el}\n        </button>\n      ))}\n    </div>\n  );\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default FeedbackOptions;\n\n// ====\n// +++++++++\n// class FeedbackOptions extends Component {\n//   static defaultProps = {\n//     options: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         name: PropTypes.string,\n//         value: PropTypes.number,\n//       })\n//     ),\n//   };\n//   render() {\n//     const { options } = this.props;\n//     return (\n//       <div className=\"btn__block\">\n//         {options.map((el) => (\n//           <button\n//             type=\"button\"\n//             className=\"btn__item\"\n//             id={el}\n//             key={el}\n//             onClick={this.props.onLeaveFeedback}\n//           >\n//             {el}\n//           </button>\n//         ))}\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport \"../styles/container.scss\";\n\nexport default function Container({ children }) {\n  return <div className=\"container\">{children}</div>;\n}\n","import React, { Component } from \"react\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\nimport Statistics from \"./Statistics/Statistiсs\";\nimport FeedbackOptions from \"./Feedback/FeedbackOptions\";\nimport Container from \"./Container/Container\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrementVote = (evt) => {\n    const { target } = evt;\n    this.setState((prevState) => ({\n      //   [evt]: prevState[evt] + 1,\n      [target.textContent]: prevState[target.textContent] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce(\n      (prevValue, nextValue) => prevValue + nextValue\n    );\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positivePercentage = Math.round(\n      (this.state.good / this.countTotalFeedback()) * 100\n    );\n\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncrementVote}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percentage}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}